{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Desktop\\\\my-applications\\\\social-media\\\\client\\\\src\\\\SocketClient.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { alertTypes, authTypes, globalTypes, messageTypes, notifyTypes, postTypes } from \"./redux/type/types\";\nimport { APP_NAME } from \"./utils/config\";\nimport audioBlip2 from \"./audio/motify-allappA.wav\"; // import audioBlip1 from \"./audio/cameraCap.wav\";\n//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst spawnNotification = (body, icon, url, title) => {\n  let options = {\n    body,\n    icon\n  };\n  let n = new Notification(title, options);\n\n  n.onclick = e => {\n    e.preventDefault();\n    window.open(url, \"_blank\");\n  };\n};\n\nfunction SocketClient() {\n  _s();\n\n  const audioRef = useRef();\n  const {\n    auth,\n    socket,\n    notify,\n    online,\n    call\n  } = useSelector(state => state);\n  const dispatch = useDispatch(); //joinUser\n\n  useEffect(() => {\n    socket.emit(\"joinUser\", auth.user);\n  }, [socket, auth.user]); //likes && unLikes\n\n  useEffect(() => {\n    socket.on(\"likeToClient\", newPost => {\n      dispatch({\n        type: postTypes.EDITE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"likeToClient\");\n  }, [dispatch, socket]);\n  useEffect(() => {\n    socket.on(\"unLikeToClient\", newPost => {\n      dispatch({\n        type: postTypes.EDITE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"unLikeToClient\");\n  }, [dispatch, socket]); //comments\n\n  useEffect(() => {\n    socket.on(\"createCommentToClient\", newPost => {\n      dispatch({\n        type: postTypes.EDITE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"createCommentToClient\");\n  }, [dispatch, socket]);\n  useEffect(() => {\n    socket.on(\"deleteCommentToClient\", newPost => {\n      dispatch({\n        type: postTypes.EDITE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"deleteCommentToClient\");\n  }, [dispatch, socket]); // follow\n\n  useEffect(() => {\n    socket.on(\"followToClient\", newUser => {\n      dispatch({\n        type: authTypes.REFRESH_INFO,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"followToClient\");\n  }, [dispatch, socket, auth]);\n  useEffect(() => {\n    socket.on(\"unFollowToClient\", newUser => {\n      dispatch({\n        type: authTypes.REFRESH_INFO,\n        payload: { ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"unFollowToClient\");\n  }, [dispatch, socket, auth]); // notify\n\n  useEffect(() => {\n    socket.on(\"creaNotifyToClient\", msg => {\n      if (notify.sound) {\n        audioRef.current.play();\n      }\n\n      dispatch({\n        type: notifyTypes.CREATE_NOTIFY,\n        payload: msg\n      });\n      spawnNotification(msg.user.username + \" \" + msg.text, msg.user.avatar, msg.url, APP_NAME);\n    });\n    return () => socket.off(\"creaNotifyToClient\");\n  }, [dispatch, socket, auth, notify.sound]);\n  useEffect(() => {\n    socket.on(\"removeNotifyToClient\", msg => {\n      dispatch({\n        type: notifyTypes.REMOVE_NOTIFY,\n        payload: msg\n      });\n    });\n    return () => socket.off(\"removeNotifyToClient\");\n  }, [dispatch, socket, auth]); // message\n\n  useEffect(() => {\n    socket.on(\"addMessageToClient\", msg => {\n      dispatch({\n        type: messageTypes.ADD_MESSAGE,\n        payload: msg\n      });\n      dispatch({\n        type: messageTypes.ADD_USER,\n        payload: { ...msg.user,\n          text: msg.text,\n          media: msg.media\n        }\n      });\n    });\n    return () => socket.off(\"addMessageToClient\");\n  }, [dispatch, socket, auth]); //check user online\n\n  useEffect(() => {\n    socket.emit(\"chekUserOnline\", auth.user);\n  }, [socket, auth.user]);\n  useEffect(() => {\n    socket.on(\"chekUserOnlineToMe\", data => {\n      data.forEach(item => {\n        if (!online.includes(item.id)) {\n          dispatch({\n            type: globalTypes.ONLINE,\n            payload: item.id\n          });\n        }\n      });\n    });\n    return () => socket.off(\"chekUserOnlineToMe\");\n  }, [dispatch, socket, online]);\n  useEffect(() => {\n    socket.on(\"checkUserOnlineToClient\", id => {\n      if (!online.includes(id)) {\n        dispatch({\n          type: globalTypes.ONLINE,\n          payload: id\n        });\n      }\n    });\n    return () => socket.off(\"checkUserOnlineToClient\");\n  }, [dispatch, socket, online]); // check user offLine\n\n  useEffect(() => {\n    socket.on(\"checkuserOffLineToClient\", id => {\n      dispatch({\n        type: globalTypes.OFFLINE,\n        payload: id\n      });\n    });\n    return () => socket.off(\"checkuserOffLineToClient\");\n  }, [dispatch, socket, online]); // call user\n\n  useEffect(() => {\n    socket.on(\"callUserToClient\", data => {\n      dispatch({\n        type: globalTypes.CALL,\n        payload: data\n      });\n    });\n    return () => socket.off(\"callUserToClient\");\n  }, [dispatch, socket]);\n  useEffect(() => {\n    socket.on(\"userBusy\", data => {\n      dispatch({\n        type: alertTypes.ALERT_MESSAGE,\n        payload: {\n          error: `${call.username} is alredy in other call.!`\n        }\n      }); // dispatch({\n      //   type: globalTypes.CALL,\n      //   payload: null,\n      // });\n    });\n    return () => socket.off(\"userBusy\");\n  }, [dispatch, socket, call]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      ref: audioRef,\n      style: {\n        display: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: audioBlip2,\n        type: \"audio/wav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SocketClient, \"zHyTCA2yUfNmZpF6p09MMeYt7Do=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SocketClient;\nSocketClient.propTypes = {\n  auth: PropTypes.object\n};\nexport default SocketClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketClient\");","map":{"version":3,"names":["React","useEffect","useRef","PropTypes","useDispatch","useSelector","alertTypes","authTypes","globalTypes","messageTypes","notifyTypes","postTypes","APP_NAME","audioBlip2","spawnNotification","body","icon","url","title","options","n","Notification","onclick","e","preventDefault","window","open","SocketClient","audioRef","auth","socket","notify","online","call","state","dispatch","emit","user","on","newPost","type","EDITE_POST","payload","off","newUser","REFRESH_INFO","msg","sound","current","play","CREATE_NOTIFY","username","text","avatar","REMOVE_NOTIFY","ADD_MESSAGE","ADD_USER","media","data","forEach","item","includes","id","ONLINE","OFFLINE","CALL","ALERT_MESSAGE","error","display","propTypes","object"],"sources":["C:/Users/owner/Desktop/my-applications/social-media/client/src/SocketClient.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  alertTypes,\r\n  authTypes,\r\n  globalTypes,\r\n  messageTypes,\r\n  notifyTypes,\r\n  postTypes,\r\n} from \"./redux/type/types\";\r\nimport { APP_NAME } from \"./utils/config\";\r\n\r\nimport audioBlip2 from \"./audio/motify-allappA.wav\";\r\n// import audioBlip1 from \"./audio/cameraCap.wav\";\r\n//\r\n\r\nconst spawnNotification = (body, icon, url, title) => {\r\n  let options = {\r\n    body,\r\n    icon,\r\n  };\r\n\r\n  let n = new Notification(title, options);\r\n  n.onclick = (e) => {\r\n    e.preventDefault();\r\n    window.open(url, \"_blank\");\r\n  };\r\n};\r\n\r\nfunction SocketClient() {\r\n  const audioRef = useRef();\r\n  const { auth, socket, notify, online, call } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  //joinUser\r\n  useEffect(() => {\r\n    socket.emit(\"joinUser\", auth.user);\r\n  }, [socket, auth.user]);\r\n\r\n  //likes && unLikes\r\n  useEffect(() => {\r\n    socket.on(\"likeToClient\", (newPost) => {\r\n      dispatch({\r\n        type: postTypes.EDITE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n    return () => socket.off(\"likeToClient\");\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"unLikeToClient\", (newPost) => {\r\n      dispatch({\r\n        type: postTypes.EDITE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n    return () => socket.off(\"unLikeToClient\");\r\n  }, [dispatch, socket]);\r\n\r\n  //comments\r\n  useEffect(() => {\r\n    socket.on(\"createCommentToClient\", (newPost) => {\r\n      dispatch({\r\n        type: postTypes.EDITE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n    return () => socket.off(\"createCommentToClient\");\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"deleteCommentToClient\", (newPost) => {\r\n      dispatch({\r\n        type: postTypes.EDITE_POST,\r\n        payload: newPost,\r\n      });\r\n    });\r\n    return () => socket.off(\"deleteCommentToClient\");\r\n  }, [dispatch, socket]);\r\n\r\n  // follow\r\n  useEffect(() => {\r\n    socket.on(\"followToClient\", (newUser) => {\r\n      dispatch({\r\n        type: authTypes.REFRESH_INFO,\r\n        payload: {\r\n          ...auth,\r\n          user: newUser,\r\n        },\r\n      });\r\n    });\r\n    return () => socket.off(\"followToClient\");\r\n  }, [dispatch, socket, auth]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"unFollowToClient\", (newUser) => {\r\n      dispatch({\r\n        type: authTypes.REFRESH_INFO,\r\n        payload: {\r\n          ...auth,\r\n          user: newUser,\r\n        },\r\n      });\r\n    });\r\n    return () => socket.off(\"unFollowToClient\");\r\n  }, [dispatch, socket, auth]);\r\n  // notify\r\n  useEffect(() => {\r\n    socket.on(\"creaNotifyToClient\", (msg) => {\r\n      if (notify.sound) {\r\n        audioRef.current.play();\r\n      }\r\n      dispatch({\r\n        type: notifyTypes.CREATE_NOTIFY,\r\n        payload: msg,\r\n      });\r\n      spawnNotification(\r\n        msg.user.username + \" \" + msg.text,\r\n        msg.user.avatar,\r\n        msg.url,\r\n        APP_NAME\r\n      );\r\n    });\r\n    return () => socket.off(\"creaNotifyToClient\");\r\n  }, [dispatch, socket, auth, notify.sound]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"removeNotifyToClient\", (msg) => {\r\n      dispatch({\r\n        type: notifyTypes.REMOVE_NOTIFY,\r\n        payload: msg,\r\n      });\r\n    });\r\n    return () => socket.off(\"removeNotifyToClient\");\r\n  }, [dispatch, socket, auth]);\r\n\r\n  // message\r\n\r\n  useEffect(() => {\r\n    socket.on(\"addMessageToClient\", (msg) => {\r\n      dispatch({\r\n        type: messageTypes.ADD_MESSAGE,\r\n        payload: msg,\r\n      });\r\n      dispatch({\r\n        type: messageTypes.ADD_USER,\r\n        payload: { ...msg.user, text: msg.text, media: msg.media },\r\n      });\r\n    });\r\n    return () => socket.off(\"addMessageToClient\");\r\n  }, [dispatch, socket, auth]);\r\n\r\n  //check user online\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"chekUserOnline\", auth.user);\r\n  }, [socket, auth.user]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"chekUserOnlineToMe\", (data) => {\r\n      data.forEach((item) => {\r\n        if (!online.includes(item.id)) {\r\n          dispatch({\r\n            type: globalTypes.ONLINE,\r\n            payload: item.id,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return () => socket.off(\"chekUserOnlineToMe\");\r\n  }, [dispatch, socket, online]);\r\n  useEffect(() => {\r\n    socket.on(\"checkUserOnlineToClient\", (id) => {\r\n      if (!online.includes(id)) {\r\n        dispatch({\r\n          type: globalTypes.ONLINE,\r\n          payload: id,\r\n        });\r\n      }\r\n    });\r\n    return () => socket.off(\"checkUserOnlineToClient\");\r\n  }, [dispatch, socket, online]);\r\n  // check user offLine\r\n  useEffect(() => {\r\n    socket.on(\"checkuserOffLineToClient\", (id) => {\r\n      dispatch({\r\n        type: globalTypes.OFFLINE,\r\n        payload: id,\r\n      });\r\n    });\r\n    return () => socket.off(\"checkuserOffLineToClient\");\r\n  }, [dispatch, socket, online]);\r\n\r\n  // call user\r\n  useEffect(() => {\r\n    socket.on(\"callUserToClient\", (data) => {\r\n      dispatch({\r\n        type: globalTypes.CALL,\r\n        payload: data,\r\n      });\r\n    });\r\n    return () => socket.off(\"callUserToClient\");\r\n  }, [dispatch, socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"userBusy\", (data) => {\r\n      dispatch({\r\n        type: alertTypes.ALERT_MESSAGE,\r\n        payload: { error: `${call.username} is alredy in other call.!` },\r\n      });\r\n\r\n      // dispatch({\r\n      //   type: globalTypes.CALL,\r\n      //   payload: null,\r\n      // });\r\n    });\r\n\r\n    return () => socket.off(\"userBusy\");\r\n  }, [dispatch, socket, call]);\r\n\r\n  return (\r\n    <>\r\n      <audio controls ref={audioRef} style={{ display: \"none\" }}>\r\n        <source src={audioBlip2} type=\"audio/wav\" />\r\n      </audio>\r\n    </>\r\n  );\r\n}\r\n\r\nSocketClient.propTypes = {\r\n  auth: PropTypes.object,\r\n};\r\n\r\nexport default SocketClient;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
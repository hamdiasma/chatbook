{"ast":null,"code":"import { deleteDataSimple, editDataSimple } from \"../../utils/utilsFunction\";\nimport { messageTypes } from \"../type/types\";\nconst initialState = {\n  users: [],\n  data: [],\n  resultUsers: 0,\n  firstLoad: false\n};\n\nconst messageReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case messageTypes.ADD_USER:\n      if (state.users.every(item => item._id !== payload._id)) {\n        return { ...state,\n          users: [payload, ...state.users]\n        };\n      }\n\n      return state;\n\n    case messageTypes.ADD_MESSAGE:\n      return { ...state,\n        data: state.data.map(item => item._id === payload.recipient || item._id === payload.sender ? { ...item,\n          messages: [...item.messages, payload],\n          result: item.result + 1\n        } : item),\n        users: state.users.map(user => user._id === payload.recipient || user._id === payload.sender ? { ...user,\n          text: payload.text,\n          media: payload.media,\n          call: payload.call\n        } : user)\n      };\n\n    case messageTypes.GET_CONVERSATIONS:\n      return { ...state,\n        users: payload.newArr,\n        resultUsers: payload.result,\n        firstLoad: true\n      };\n\n    case messageTypes.GET_MESSAGES:\n      return { ...state,\n        data: [...state.data, payload]\n      };\n\n    case messageTypes.UPDATED_GET_MESSAGES:\n      return { ...state,\n        data: editDataSimple(state.data, payload._id, payload)\n      };\n\n    case messageTypes.DELETE_MESSAGE:\n      return { ...state,\n        data: state.data.map(item => item._id === payload._id ? { ...item,\n          messages: payload.newData\n        } : item)\n      };\n\n    case messageTypes.DELETE_CONVERSATION:\n      return { ...state,\n        users: deleteDataSimple(state.users, payload),\n        data: deleteDataSimple(state.data, payload)\n      };\n\n    case messageTypes.CHECK_ONLINE_OFFLINE:\n      return { ...state,\n        users: state.users.map(user => payload.includes(user._id) ? { ...user,\n          online: true\n        } : { ...user,\n          online: false\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default messageReducers;","map":{"version":3,"names":["deleteDataSimple","editDataSimple","messageTypes","initialState","users","data","resultUsers","firstLoad","messageReducers","state","action","type","payload","ADD_USER","every","item","_id","ADD_MESSAGE","map","recipient","sender","messages","result","user","text","media","call","GET_CONVERSATIONS","newArr","GET_MESSAGES","UPDATED_GET_MESSAGES","DELETE_MESSAGE","newData","DELETE_CONVERSATION","CHECK_ONLINE_OFFLINE","includes","online"],"sources":["C:/Users/owner/Desktop/my-applications/social-media/client/src/redux/reducers/message.js"],"sourcesContent":["import { deleteDataSimple, editDataSimple } from \"../../utils/utilsFunction\";\r\nimport { messageTypes } from \"../type/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  data: [],\r\n  resultUsers: 0,\r\n  firstLoad: false,\r\n};\r\n\r\nconst messageReducers = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case messageTypes.ADD_USER:\r\n      if (state.users.every((item) => item._id !== payload._id)) {\r\n        return {\r\n          ...state,\r\n          users: [payload, ...state.users],\r\n        };\r\n      }\r\n      return state;\r\n\r\n    case messageTypes.ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        data: state.data.map((item) =>\r\n          item._id === payload.recipient || item._id === payload.sender\r\n            ? {\r\n                ...item,\r\n                messages: [...item.messages, payload],\r\n                result: item.result + 1,\r\n              }\r\n            : item\r\n        ),\r\n        users: state.users.map((user) =>\r\n          user._id === payload.recipient || user._id === payload.sender\r\n            ? {\r\n                ...user,\r\n                text: payload.text,\r\n                media: payload.media,\r\n\r\n                call: payload.call,\r\n              }\r\n            : user\r\n        ),\r\n      };\r\n    case messageTypes.GET_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        users: payload.newArr,\r\n        resultUsers: payload.result,\r\n        firstLoad: true,\r\n      };\r\n\r\n    case messageTypes.GET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, payload],\r\n      };\r\n\r\n    case messageTypes.UPDATED_GET_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: editDataSimple(state.data, payload._id, payload),\r\n      };\r\n    case messageTypes.DELETE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        data: state.data.map((item) =>\r\n          item._id === payload._id\r\n            ? {\r\n                ...item,\r\n                messages: payload.newData,\r\n              }\r\n            : item\r\n        ),\r\n      };\r\n    case messageTypes.DELETE_CONVERSATION:\r\n      return {\r\n        ...state,\r\n        users: deleteDataSimple(state.users, payload),\r\n        data: deleteDataSimple(state.data, payload),\r\n      };\r\n    case messageTypes.CHECK_ONLINE_OFFLINE:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          payload.includes(user._id)\r\n            ? { ...user, online: true }\r\n            : { ...user, online: false }\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducers;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,cAA3B,QAAiD,2BAAjD;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,IAAI,EAAE,EAFa;EAGnBC,WAAW,EAAE,CAHM;EAInBC,SAAS,EAAE;AAJQ,CAArB;;AAOA,MAAMC,eAAe,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;EACxD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EACA,QAAQC,IAAR;IACE,KAAKT,YAAY,CAACW,QAAlB;MACE,IAAIJ,KAAK,CAACL,KAAN,CAAYU,KAAZ,CAAmBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAAjD,CAAJ,EAA2D;QACzD,OAAO,EACL,GAAGP,KADE;UAELL,KAAK,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,KAAnB;QAFF,CAAP;MAID;;MACD,OAAOK,KAAP;;IAEF,KAAKP,YAAY,CAACe,WAAlB;MACE,OAAO,EACL,GAAGR,KADE;QAELJ,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWa,GAAX,CAAgBH,IAAD,IACnBA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACO,SAArB,IAAkCJ,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACQ,MAAvD,GACI,EACE,GAAGL,IADL;UAEEM,QAAQ,EAAE,CAAC,GAAGN,IAAI,CAACM,QAAT,EAAmBT,OAAnB,CAFZ;UAGEU,MAAM,EAAEP,IAAI,CAACO,MAAL,GAAc;QAHxB,CADJ,GAMIP,IAPA,CAFD;QAWLX,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYc,GAAZ,CAAiBK,IAAD,IACrBA,IAAI,CAACP,GAAL,KAAaJ,OAAO,CAACO,SAArB,IAAkCI,IAAI,CAACP,GAAL,KAAaJ,OAAO,CAACQ,MAAvD,GACI,EACE,GAAGG,IADL;UAEEC,IAAI,EAAEZ,OAAO,CAACY,IAFhB;UAGEC,KAAK,EAAEb,OAAO,CAACa,KAHjB;UAKEC,IAAI,EAAEd,OAAO,CAACc;QALhB,CADJ,GAQIH,IATC;MAXF,CAAP;;IAuBF,KAAKrB,YAAY,CAACyB,iBAAlB;MACE,OAAO,EACL,GAAGlB,KADE;QAELL,KAAK,EAAEQ,OAAO,CAACgB,MAFV;QAGLtB,WAAW,EAAEM,OAAO,CAACU,MAHhB;QAILf,SAAS,EAAE;MAJN,CAAP;;IAOF,KAAKL,YAAY,CAAC2B,YAAlB;MACE,OAAO,EACL,GAAGpB,KADE;QAELJ,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBO,OAAhB;MAFD,CAAP;;IAKF,KAAKV,YAAY,CAAC4B,oBAAlB;MACE,OAAO,EACL,GAAGrB,KADE;QAELJ,IAAI,EAAEJ,cAAc,CAACQ,KAAK,CAACJ,IAAP,EAAaO,OAAO,CAACI,GAArB,EAA0BJ,OAA1B;MAFf,CAAP;;IAIF,KAAKV,YAAY,CAAC6B,cAAlB;MACE,OAAO,EACL,GAAGtB,KADE;QAELJ,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWa,GAAX,CAAgBH,IAAD,IACnBA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAArB,GACI,EACE,GAAGD,IADL;UAEEM,QAAQ,EAAET,OAAO,CAACoB;QAFpB,CADJ,GAKIjB,IANA;MAFD,CAAP;;IAWF,KAAKb,YAAY,CAAC+B,mBAAlB;MACE,OAAO,EACL,GAAGxB,KADE;QAELL,KAAK,EAAEJ,gBAAgB,CAACS,KAAK,CAACL,KAAP,EAAcQ,OAAd,CAFlB;QAGLP,IAAI,EAAEL,gBAAgB,CAACS,KAAK,CAACJ,IAAP,EAAaO,OAAb;MAHjB,CAAP;;IAKF,KAAKV,YAAY,CAACgC,oBAAlB;MACE,OAAO,EACL,GAAGzB,KADE;QAELL,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYc,GAAZ,CAAiBK,IAAD,IACrBX,OAAO,CAACuB,QAAR,CAAiBZ,IAAI,CAACP,GAAtB,IACI,EAAE,GAAGO,IAAL;UAAWa,MAAM,EAAE;QAAnB,CADJ,GAEI,EAAE,GAAGb,IAAL;UAAWa,MAAM,EAAE;QAAnB,CAHC;MAFF,CAAP;;IASF;MACE,OAAO3B,KAAP;EAlFJ;AAoFD,CAtFD;;AAwFA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}
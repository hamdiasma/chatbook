{"ast":null,"code":"import { deleteData, getData, patchData, postData } from \"../../utils/fetchData\";\nimport { notifyTypes } from \"../type/types\";\nimport { alertAction } from \"./alert\";\nexport const createNotifyAction = _ref => {\n  let {\n    msg,\n    auth,\n    socket\n  } = _ref;\n  return async dispatch => {\n    try {\n      const res = await postData(\"create_notify\", msg, auth.token);\n      socket.emit(\"creaNotify\", { ...res.data.newNotify,\n        user: {\n          username: auth.user.username,\n          avatar: auth.user.avatar\n        }\n      });\n    } catch (error) {\n      dispatch(alertAction({\n        error: error.response.data.msg\n      }));\n    }\n  };\n};\nexport const removeNotifyAction = _ref2 => {\n  let {\n    msg,\n    auth,\n    socket\n  } = _ref2;\n  return async dispatch => {\n    try {\n      await deleteData(`delete_notify/${msg.id}?url=${msg.url}`, auth.token);\n      socket.emit(\"removeNotify\", msg);\n    } catch (error) {\n      dispatch(alertAction({\n        error: error.response.data.msg\n      }));\n    }\n  };\n};\nexport const getNotifiesAction = token => async dispatch => {\n  try {\n    const res = await getData(\"notifies\", token);\n    dispatch({\n      type: notifyTypes.GET_NOTIFIS,\n      payload: res.data.notifies\n    });\n  } catch (error) {\n    dispatch(alertAction({\n      error: error.response.data.msg\n    }));\n  }\n};\nexport const isReadtNotifyAction = _ref3 => {\n  let {\n    msg,\n    auth\n  } = _ref3;\n  return async dispatch => {\n    dispatch({\n      type: notifyTypes.UPDATE_NOTIFy,\n      payload: { ...msg,\n        isRead: true\n      }\n    });\n\n    try {\n      await patchData(`isread_notify/${msg._id}`, null, auth.token);\n    } catch (error) {\n      dispatch(alertAction({\n        error: error.response.data.msg\n      }));\n    }\n  };\n};\nexport const deletAllNotifies = token => async dispatch => {\n  dispatch({\n    type: notifyTypes.DELETE_ALL_NOTIFies\n  });\n\n  try {\n    await deleteData(\"delate_all_notifies\", token);\n  } catch (error) {\n    dispatch(alertAction({\n      error: error.response.data.msg\n    }));\n  }\n};\nexport const updateSoundAction = payload => dispatch => {\n  dispatch({\n    type: notifyTypes.UPDATE_SOUND,\n    payload\n  });\n};","map":{"version":3,"names":["deleteData","getData","patchData","postData","notifyTypes","alertAction","createNotifyAction","msg","auth","socket","dispatch","res","token","emit","data","newNotify","user","username","avatar","error","response","removeNotifyAction","id","url","getNotifiesAction","type","GET_NOTIFIS","payload","notifies","isReadtNotifyAction","UPDATE_NOTIFy","isRead","_id","deletAllNotifies","DELETE_ALL_NOTIFies","updateSoundAction","UPDATE_SOUND"],"sources":["C:/Users/owner/Desktop/my-applications/social-media/client/src/redux/actions/notify.js"],"sourcesContent":["import {\r\n  deleteData,\r\n  getData,\r\n  patchData,\r\n  postData,\r\n} from \"../../utils/fetchData\";\r\nimport { notifyTypes } from \"../type/types\";\r\nimport { alertAction } from \"./alert\";\r\n\r\nexport const createNotifyAction =\r\n  ({ msg, auth, socket }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const res = await postData(\"create_notify\", msg, auth.token);\r\n      socket.emit(\"creaNotify\", {\r\n        ...res.data.newNotify,\r\n        user: {\r\n          username: auth.user.username,\r\n          avatar: auth.user.avatar,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      dispatch(alertAction({ error: error.response.data.msg }));\r\n    }\r\n  };\r\n\r\nexport const removeNotifyAction =\r\n  ({ msg, auth, socket }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      await deleteData(`delete_notify/${msg.id}?url=${msg.url}`, auth.token);\r\n      socket.emit(\"removeNotify\", msg);\r\n    } catch (error) {\r\n      dispatch(alertAction({ error: error.response.data.msg }));\r\n    }\r\n  };\r\n\r\nexport const getNotifiesAction = (token) => async (dispatch) => {\r\n  try {\r\n    const res = await getData(\"notifies\", token);\r\n    dispatch({\r\n      type: notifyTypes.GET_NOTIFIS,\r\n      payload: res.data.notifies,\r\n    });\r\n  } catch (error) {\r\n    dispatch(alertAction({ error: error.response.data.msg }));\r\n  }\r\n};\r\n\r\nexport const isReadtNotifyAction =\r\n  ({ msg, auth }) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: notifyTypes.UPDATE_NOTIFy,\r\n      payload: { ...msg, isRead: true },\r\n    });\r\n    try {\r\n      await patchData(`isread_notify/${msg._id}`, null, auth.token);\r\n    } catch (error) {\r\n      dispatch(alertAction({ error: error.response.data.msg }));\r\n    }\r\n  };\r\n\r\nexport const deletAllNotifies = (token) => async (dispatch) => {\r\n  dispatch({\r\n    type: notifyTypes.DELETE_ALL_NOTIFies,\r\n  });\r\n  try {\r\n    await deleteData(\"delate_all_notifies\", token);\r\n  } catch (error) {\r\n    dispatch(alertAction({ error: error.response.data.msg }));\r\n  }\r\n};\r\n\r\nexport const updateSoundAction = (payload) => (dispatch) => {\r\n  dispatch({\r\n    type: notifyTypes.UPDATE_SOUND,\r\n    payload,\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}